#%Module########################################################################
##
## ${module_name} modulefile
##

proc ModulesHelp { } {
        global version

        puts stderr "   ${module_description}"
        puts stderr "   Version ${module_version}"
}

set name          ${module_name}
set version       ${module_version}
set base          ${module_path}

module-whatis   "${module_description} ${module_version}"

module load udunits

module load dea-env

prepend-path PYTHONPATH ${python_path}
prepend-path PATH ${module_path}/bin

setenv DATACUBE_CONFIG_PATH ${module_path}/datacube.conf

setenv LC_ALL en_AU.utf8
setenv LANG C.UTF-8

#############################################################
# When loading, ensure a database username has been created
# and warn if a ~/.datacube.conf file exists
#-------------------------------------------------------------
if { [module-info mode load] } {
    if { [catch {exec -ignorestderr ${module_path}/bin/datacube-ensure-user.py ${dbhost} ${dbport}} results options] } {
        puts stderr "Error: database connection check failed!"
        puts stderr "  see log above for more details"
    }

    if { [file exists ~/.datacube.conf]==1 } {
        puts stderr "Warning: ~/.datacube.conf detected"
        puts stderr "  it might conflict with this module"
        puts stderr "  consider removing or renaming it"
    }
}

