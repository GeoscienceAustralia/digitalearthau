#%Module########################################################################
##
## ${package_name} modulefile
##

proc ModulesHelp { } {
        global version

        puts stderr "   ${package_description}"
        puts stderr "   Version ${version}"
}

set name          ${package_name}
set version       ${version}
set base          ${module_dir}

module-whatis   "${package_description} ${version}"

module load udunits
module load dea-env/${dea_env_version}

prepend-path PYTHONPATH ${python_dest}
prepend-path PATH ${package_dest}/bin

setenv DATACUBE_CONFIG_PATH ${module_dest}/datacube.conf

setenv LC_ALL en_AU.utf8
setenv LANG C.UTF-8

#############################################################
# When loading, ensure a database username has been created
# and warn if a ~/.datacube.conf file exists
#-------------------------------------------------------------
if { [module-info mode load] } {
    if { [catch {exec -ignorestderr ${module_dest}/datacube-ensure-user.py ${dbhost} ${dbport}} results options] } {
        puts stderr "Error: database connection check failed!"
        puts stderr "  see log above for more details"
    }

    if { [file exists ~/.datacube.conf]==1 } {
        puts stderr "Warning: ~/.datacube.conf detected"
        puts stderr "  it might conflict with this module"
        puts stderr "  consider removing or renaming it"
    }
}

